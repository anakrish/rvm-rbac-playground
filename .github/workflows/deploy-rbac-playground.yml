name: Deploy RBAC Playground to GitHub Pages

on:
  # Run weekly on Mondays at 2 AM UTC
  schedule:
    - cron: '0 2 * * 1'
  
  # Allow manual trigger from Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout RBAC branch
        uses: actions/checkout@v4
        with:
          repository: anakrish/regorus
          ref: rbac
          fetch-depth: 0
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      
      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build RBAC Playground
        run: |
          cd playgrounds/rbac_rvm_playground
          chmod +x build.sh
          ./build.sh
        env:
          CARGO_TERM_COLOR: always
          RUSTFLAGS: "--cfg getrandom_backend=\"wasm_js\""
      
      - name: Prepare deployment artifacts
        run: |
          mkdir -p deploy
          
          # Debug: List available files
          echo "=== Available files in rbac_rvm_playground ==="
          ls -la playgrounds/rbac_rvm_playground/
          
          # Debug: Check if pkg directory exists and its contents
          if [ -d "playgrounds/rbac_rvm_playground/pkg" ]; then
            echo "=== Contents of pkg directory ==="
            ls -la playgrounds/rbac_rvm_playground/pkg/
          else
            echo "WARNING: pkg directory not found!"
          fi
          
          # Copy files
          cp -r playgrounds/rbac_rvm_playground/index.html deploy/
          cp -r playgrounds/rbac_rvm_playground/app.js deploy/
          cp -r playgrounds/rbac_rvm_playground/examples.js deploy/
          cp -r playgrounds/rbac_rvm_playground/styles.css deploy/
          cp -r playgrounds/rbac_rvm_playground/pkg deploy/
          cp -r playgrounds/rbac_rvm_playground/README.md deploy/
          
          # Add .nojekyll file to bypass Jekyll processing
          touch deploy/.nojekyll
          
          # Add _headers file for proper WASM MIME type (Netlify/GitHub Pages compatible)
          cat > deploy/_headers << 'EOF'
          /*
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
          
          /*.wasm
            Content-Type: application/wasm
          EOF
          
          # Debug: List deployed files
          echo "=== Deployed files ==="
          find deploy -type f | head -20
          
          # Debug: Check WASM files specifically
          echo "=== WASM files ==="
          find deploy -name "*.wasm" -ls
          
          # Create a simple 404 page
          cat > deploy/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Page Not Found</title>
            <meta http-equiv="refresh" content="0; url=/">
          </head>
          <body>
            <p>Redirecting to <a href="/">home page</a>...</p>
          </body>
          </html>
          EOF
      
      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # Note: This will fail until GitHub Pages is enabled in repository settings
        # Go to Settings > Pages > Source: GitHub Actions
      
      - name: Summary
        run: |
          echo "## ðŸš€ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The RBAC Playground has been deployed to GitHub Pages." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: rbac" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- Trigger: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
